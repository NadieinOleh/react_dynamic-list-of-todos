{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","currentTodo","setCurrentTodo","setHideTodoModal","className","map","todo","id","completed","title","type","onClick","TodoFilter","inputValue","setInputValue","selectOption","setSelectOption","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","resetTodo","useState","currentUser","setCurrentUsers","useMemo","userId","user","findTodo","find","href","name","App","setTodos","showTodoModal","showTodo","setShowTodo","filterByCompletion","filteredTodos","filter","includes","toLocaleLowerCase","trim","todoFilterList","filterTodo","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c238d87.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  currentTodo: number;\n  setCurrentTodo: (todo: number) => void;\n  setHideTodoModal: (hide: boolean) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  currentTodo,\n  setCurrentTodo,\n  setHideTodoModal,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr data-cy=\"todo\" key={todo.id} className=\"\">\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={`has-text-${todo.completed\n                ? 'success'\n                : 'danger'}`}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  setHideTodoModal(true);\n                  setCurrentTodo(todo.id);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={`far fa-eye${todo.id === currentTodo ? '-slash' : ''}`} />\n                </span>\n              </button>\n\n            </td>\n          </tr>\n        ))}\n\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  inputValue: string;\n  setInputValue: (inputValue: string) => void;\n  setSelectOption: (inputValue: string) => void;\n  selectOption: string;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  inputValue,\n  setInputValue,\n  selectOption,\n  setSelectOption,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectOption}\n            onChange={event => setSelectOption(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={inputValue}\n          onChange={({ target }) => setInputValue(target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {inputValue && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setInputValue('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useMemo, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  setHideTodoModal: (hide: boolean) => void;\n  resetTodo: (hide: number) => void;\n  currentTodo: number;\n  todos: Todo[];\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  setHideTodoModal,\n  resetTodo,\n  currentTodo,\n  todos,\n}) => {\n  const [currentUser, setCurrentUsers] = useState<User>();\n\n  useMemo(() => {\n    if (currentTodo !== 0) {\n      getUser(currentTodo).then((user) => setCurrentUsers(user));\n    }\n  }, [currentTodo]);\n\n  const findTodo = todos.find(todo => todo.id === currentTodo);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!currentUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${currentTodo}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setHideTodoModal(false);\n                resetTodo(0);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {findTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong\n                className={`has-text-${findTodo?.completed ? 'succses' : 'danger'}`}\n              >\n                {findTodo?.completed\n                  ? 'Done'\n                  : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {currentUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [currentTodo, setCurrentTodo] = useState<number>(0);\n  const [showTodoModal, setHideTodoModal] = useState(false);\n  const [showTodo, setShowTodo] = useState(true);\n\n  const [selectOption, setSelectOption] = useState('All');\n  const [inputValue, setInputValue] = useState('');\n\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const filterByCompletion = (todos: Todo[], value: string, completed: boolean) => {\n    const filteredTodos = todos.filter((todo: Todo) => todo.completed === completed);\n\n    return !value\n      ? filteredTodos\n      : filteredTodos.filter((todo: Todo) => todo.title.includes(value.toLocaleLowerCase().trim()));\n  };\n\n  const filterTodo = () => {\n    switch (selectOption) {\n      case 'All':\n        return !inputValue\n          ? todos\n          : todos?.filter((todo: Todo) => todo.title.includes(inputValue.toLocaleLowerCase().trim()));\n\n      case 'active':\n        return filterByCompletion(todos, inputValue, false);\n\n      case 'completed':\n        return filterByCompletion(todos, inputValue, true);\n\n      default:\n        return todos;\n    }\n  };\n\n  const todoFilterList = filterTodo();\n  // todos.filter(todo => todo.includes(inputValue.trim()));\n\n  useEffect(() => {\n    getTodos()\n      .then(todo => {\n        setTodos(todo);\n        setShowTodo(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                inputValue={inputValue}\n                setInputValue={setInputValue}\n                selectOption={selectOption}\n                setSelectOption={setSelectOption}\n              />\n            </div>\n\n            <div className=\"block\">\n              {showTodo\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={todoFilterList}\n                    setCurrentTodo={setCurrentTodo}\n                    currentTodo={currentTodo}\n                    setHideTodoModal={setHideTodoModal}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showTodoModal\n        && (\n          <TodoModal\n            setHideTodoModal={setHideTodoModal}\n            resetTodo={setCurrentTodo}\n            currentTodo={currentTodo}\n            todos={todos}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}